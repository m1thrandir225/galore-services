// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: liked_flavours.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const likeFlavour = `-- name: LikeFlavour :one
INSERT INTO liked_flavours (
  flavour_id,
  user_id
) VALUES (
  $1,
  $2
) RETURNING flavour_id, user_id
`

type LikeFlavourParams struct {
	FlavourID uuid.UUID `json:"flavour_id"`
	UserID    uuid.UUID `json:"user_id"`
}

func (q *Queries) LikeFlavour(ctx context.Context, arg LikeFlavourParams) (LikedFlavour, error) {
	row := q.db.QueryRow(ctx, likeFlavour, arg.FlavourID, arg.UserID)
	var i LikedFlavour
	err := row.Scan(&i.FlavourID, &i.UserID)
	return i, err
}

const unlikeFlavour = `-- name: UnlikeFlavour :exec
DELETE FROM liked_flavours 
WHERE flavour_id = $1 AND user_id = $2
`

type UnlikeFlavourParams struct {
	FlavourID uuid.UUID `json:"flavour_id"`
	UserID    uuid.UUID `json:"user_id"`
}

func (q *Queries) UnlikeFlavour(ctx context.Context, arg UnlikeFlavourParams) error {
	_, err := q.db.Exec(ctx, unlikeFlavour, arg.FlavourID, arg.UserID)
	return err
}
