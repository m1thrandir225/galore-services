// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/galore-services/image_gen (interfaces: ImageGenerator)
//
// Generated by this command:
//
//	mockgen -package mockimagegen -destination image_gen/mock/image_gen.go github.com/m1thrandir225/galore-services/image_gen ImageGenerator
//

// Package mockimagegen is a generated GoMock package.
package mockimagegen

import (
	http "net/http"
	reflect "reflect"

	image_gen "github.com/m1thrandir225/galore-services/image_gen"
	gomock "go.uber.org/mock/gomock"
)

// MockImageGenerator is a mock of ImageGenerator interface.
type MockImageGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockImageGeneratorMockRecorder
}

// MockImageGeneratorMockRecorder is the mock recorder for MockImageGenerator.
type MockImageGeneratorMockRecorder struct {
	mock *MockImageGenerator
}

// NewMockImageGenerator creates a new mock instance.
func NewMockImageGenerator(ctrl *gomock.Controller) *MockImageGenerator {
	mock := &MockImageGenerator{ctrl: ctrl}
	mock.recorder = &MockImageGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageGenerator) EXPECT() *MockImageGeneratorMockRecorder {
	return m.recorder
}

// GenerateImage mocks base method.
func (m *MockImageGenerator) GenerateImage(arg0 string, arg1 *http.Client) (*image_gen.GeneratedImage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateImage", arg0, arg1)
	ret0, _ := ret[0].(*image_gen.GeneratedImage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateImage indicates an expected call of GenerateImage.
func (mr *MockImageGeneratorMockRecorder) GenerateImage(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateImage", reflect.TypeOf((*MockImageGenerator)(nil).GenerateImage), arg0, arg1)
}

// GenerateImages mocks base method.
func (m *MockImageGenerator) GenerateImages(arg0 []string, arg1 *http.Client) ([]*image_gen.GeneratedImage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateImages", arg0, arg1)
	ret0, _ := ret[0].([]*image_gen.GeneratedImage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateImages indicates an expected call of GenerateImages.
func (mr *MockImageGeneratorMockRecorder) GenerateImages(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateImages", reflect.TypeOf((*MockImageGenerator)(nil).GenerateImages), arg0, arg1)
}
