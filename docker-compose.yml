services:
  api-service:
    platform: linux/amd64
    image: m1thrandir/galore:api-service
    build:
      context: api-service
    ports:
      - "8080:8080"
    depends_on:
      - db
      - cache
      - embedding-service
      - categorize-service
    networks:
      - app-network
    volumes:
      - ./api-service/public:/app/public
  categorize-service:
    platform: linux/amd64
    image: m1thrandir/galore:categorize-service
    build:
      context: categorize-service
    ports:
      - "8003:8003"
    networks:
      - app-network
  embedding-service:
    platform: linux/amd64
    image: m1thrandir/galore:embedding-service
    build:
      context: embedding-service
    ports:
      - "8000:8000"
    networks:
      - app-network
  migration-service:
    platform: linux/amd64
    image: m1thrandir/galore:migration-service
    build:
      context: migration-service
    ports:
      - "8001:8001"
    networks:
      - app-network
    depends_on:
      - api-service
  db:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
  cache:
    image: "docker.dragonflydb.io/dragonflydb/dragonfly"
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    volumes:
      - cache-data:/data
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  postgres-data:
  cache-data:
