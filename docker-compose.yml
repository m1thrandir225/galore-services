services:
  api-service:
    platform: linux/amd64
    image: m1thrandir/galore:api-service
    build:
      context: api-service
    env_file: "api-service.env"
    ports:
      - "9090:9090"
    depends_on:
      - db
      - cache
      - embedding-service
      - categorize-service
    networks:
      - app-network

    volumes:
      - ./api-service/public:/app/public
    healthcheck:
      test:
        ["CMD-SHELL", "wget -qO- http://localhost:8080/api/v1/health || exit 1"]
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
  categorize-service:
    platform: linux/amd64
    image: m1thrandir/galore:categorize-service
    env_file:
      - "categorize-service.env"
    build:
      context: categorize-service
    ports:
      - "8003:8003"
    networks:
      - app-network

    healthcheck:
      test: curl --fail http://categorize-service:8003/health || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
  embedding-service:
    platform: linux/amd64
    image: m1thrandir/galore:embedding-service
    env_file:
      - "embedding-service.env"
    build:
      context: embedding-service
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - huggingface-cache:/app/.cache/huggingface
    healthcheck:
      test: curl --fail http://embedding-service:8000/health || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
  migration-service:
    platform: linux/amd64
    image: m1thrandir/galore:migration-service
    env_file:
      - "migration-service.env"
    build:
      context: migration-service
    ports:
      - "8001:8001"
    networks:
      - app-network
    depends_on:
      - api-service
      - embedding-service
    healthcheck:
      test: curl --fail http://migration-service:8001/health || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
  db:
    image: pgvector/pgvector:pg15
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-healthcheck.sh:/usr/local/bin/healthcheck.sh
    ports:
      - "5432:5432"
    networks:
      - app-network
    env_file:
      - db-service.env
    healthcheck:
      test: ["CMD", "bash", "/usr/local/bin/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  cache:
    image: "docker.dragonflydb.io/dragonflydb/dragonfly"
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    volumes:
      - cache-data:/data
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "redis-cli -h localhost -p 6379 PING | grep PONG || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  worker_pool:
    image: "docker.dragonflydb.io/dragonflydb/dragonfly"
    ulimits:
      memlock: -1
    ports:
      - "6380:6380"
    volumes:
      - worker-data:/data
    networks:
      - app-network
    command: ["--port", "6380"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "redis-cli -h localhost -p 6380 PING | grep PONG || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8010:8080"
networks:
  app-network:
    driver: bridge
volumes:
  postgres-data:
  cache-data:
  worker-data:
  huggingface-cache:
